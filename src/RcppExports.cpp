// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// logSumExp
double logSumExp(NumericVector& logV, int accumulators);
RcppExport SEXP _logSumExp_logSumExp(SEXP logVSEXP, SEXP accumulatorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type logV(logVSEXP);
    Rcpp::traits::input_parameter< int >::type accumulators(accumulatorsSEXP);
    rcpp_result_gen = Rcpp::wrap(logSumExp(logV, accumulators));
    return rcpp_result_gen;
END_RCPP
}
// colLogSumExps
NumericVector colLogSumExps(NumericMatrix& logV, int accumulators);
RcppExport SEXP _logSumExp_colLogSumExps(SEXP logVSEXP, SEXP accumulatorsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type logV(logVSEXP);
    Rcpp::traits::input_parameter< int >::type accumulators(accumulatorsSEXP);
    rcpp_result_gen = Rcpp::wrap(colLogSumExps(logV, accumulators));
    return rcpp_result_gen;
END_RCPP
}
// logAddExp
NumericVector logAddExp(NumericVector& logA, NumericVector& logB);
RcppExport SEXP _logSumExp_logAddExp(SEXP logASEXP, SEXP logBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type logA(logASEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type logB(logBSEXP);
    rcpp_result_gen = Rcpp::wrap(logAddExp(logA, logB));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_logSumExp_logSumExp", (DL_FUNC) &_logSumExp_logSumExp, 2},
    {"_logSumExp_colLogSumExps", (DL_FUNC) &_logSumExp_colLogSumExps, 2},
    {"_logSumExp_logAddExp", (DL_FUNC) &_logSumExp_logAddExp, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_logSumExp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
